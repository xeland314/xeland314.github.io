---
interface Props {
    certificates: any[];
}
const { certificates } = Astro.props;
---

<div
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 3xl:grid-cols-6 gap-6"
>
    {
        certificates.map((cert) => (
            <div
                class="bg-gray-200 dark:bg-gray-700 rounded-lg shadow-lg p-6 flex flex-col items-start transition-transform hover:scale-105"
                id={`${cert.credentialId}`}
                title={cert.title}
                data-credential-id={cert.credentialId}
                data-credential-url={cert.credentialUrl}
                data-credential-title={cert.title}
                data-credential-issuer={cert.issuer}
                data-credential-date={cert.date}
                data-credential-skills={cert.skills.join(", ")}
            >
                <header class="flex flex-row items-center mb-2">
                    <img
                        src={cert.logo}
                        alt={`Logo de ${cert.issuer}`}
                        class="w-16 h-16 object-contain rounded-full mr-4 bg-white"
                        width="100"
                        height="100"
                        transition:name={`logo-${cert.credentialId}`}
                        loading="lazy"
                    />
                    <h3
                        class="text-xl font-bold"
                        transition:name={`title-${cert.credentialId}`}
                    >
                        {cert.title}
                    </h3>
                </header>
                <main class="flex flex-col mb-2 flex-1">
                    <p class="text-gray-600 dark:text-gray-400">
                        {cert.issuer}
                    </p>
                    <p class="text-gray-500 dark:text-gray-300 text-sm">
                        Emitido: {cert.issueDate}
                    </p>
                </main>
                <footer class="w-full flex flex-col">
                    <div class="flex flex-wrap gap-2 mb-3">
                        {cert.skills.map((skill: string) => (
                            <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-900">
                                {skill}
                            </span>
                        ))}
                    </div>

                    {cert.credentialUrl && (
                        <a
                            href={cert.credentialUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="mt-auto inline-flex items-center justify-end text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 font-medium"
                        >
                            Ver Credencial
                            <svg
                                class="w-4 h-4 ml-2"
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="none"
                                stroke="currentColor"
                                stroke-width="2"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                class="lucide lucide-link2-icon lucide-link-2"
                            >
                                <path d="M9 17H7A5 5 0 0 1 7 7h2" />
                                <path d="M15 7h2a5 5 0 1 1 0 10h-2" />
                                <line x1="8" x2="16" y1="12" y2="12" />
                            </svg>
                        </a>
                    )}
                </footer>
            </div>
        ))
    }
</div>
