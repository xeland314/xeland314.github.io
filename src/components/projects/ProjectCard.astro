---
// src/components/ProjectCard.astro

// Define la interfaz de las props para el componente
// Asegúrate de que coincida con la estructura de tu tabla Projects en Astro DB
interface Props {
  project: {
    title: string;
    description: string; // La descripción completa (si se pasara aquí)
    shortDescription: string; // La descripción corta para la card
    githubLink?: string | null | undefined;
    demoLink?: string | null | undefined;
    tags: string[] | unknown;
    image?: string | undefined | null;
    slug: string; // Importante para el enlace a la página de detalles
    isFeatured?: boolean; // Si es necesario, aunque no se usa aquí
  };
}

// Desestructurar las props
const { project } = Astro.props;

// Función para capitalizar la primera letra de una cadena (para las tags)
function capitalizeFirstLetter(string: string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

// Para el enlace de la página de detalles, que antes usabas project.links[0] o generabas en CardHeader
// Ahora lo generamos aquí directamente usando el slug
const detailsPageLink = `/es/projects/${project.slug}`;
---

<article
  class="rounded-lg shadow-lg overflow-hidden h-auto scrolldown-animation-2 bg-gray-200 dark:bg-gray-700 flex flex-col"
>
  <div class="flex flex-auto justify-center bg-transparent h-48">
    {
      project.image ? (
        <img
          transition:name={`img-${project.slug}`}
          class="w-full h-full object-cover"
          src={project.image}
          alt={project.title}
          loading="lazy"
        />
      ) : (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="100%"
          height="100%"
          viewBox="0 0 500 150"
          class="bg-gray-900 dark:bg-gray-900"
        >
          <rect
            width="100%"
            height="100%"
            fill="currentColor"
            class="text-gray-900 dark:text-gray-900"
          />
          <text
            x="50%"
            y="50%"
            font-size="24"
            font-family="Arial, sans-serif"
            fill="#FFFFFF"
            text-anchor="middle"
            alignment-baseline="middle"
          >
            {project.title}
          </text>
        </svg>
      )
    }
  </div>

  <div class="p-4 flex flex-col flex-grow">
    <h3
      class="text-xl font-bold mb-2"
      transition:name={`title-${project.slug}`}
    >
      <a
        href={detailsPageLink}
        class="hover:text-blue-700 dark:hover:text-blue-400 text-gray-900 dark:text-white"
      >
        {project.title}
      </a>
    </h3>

    <p class="text-gray-600 dark:text-gray-300 text-sm mb-2 flex-grow">
      {project.shortDescription}
    </p>

    <div class="flex flex-wrap gap-2 mb-2 mt-auto">
      {/* mt-auto para empujar al fondo */}
      {
        (project.tags as string[]).map((tag) => (
          <span class="bg-gray-300 dark:bg-gray-600 text-gray-800 dark:text-gray-200 text-xs font-semibold px-2.5 py-0.5 rounded-sm">
            {capitalizeFirstLetter(tag)}
          </span>
        ))
      }
    </div>

    <div
      class="grid grid-cols-1 xs:grid-cols-2 items-center justify-between gap-2 mt-4"
    >
      <a
        href={detailsPageLink}
        class="inline-flex items-center justify-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-md transition-colors flex-grow md:flex-none"
      >
        Ver Detalles
      </a>
      {
        project.githubLink && (
          <a
            href={project.githubLink}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center px-6 py-3 bg-gray-600 hover:bg-gray-800 text-white font-medium rounded-lg transition-colors flex-grow md:flex-none"
          >
            <span class="mr-2">Repositorio</span>
            <img
              src="/icons/github.svg"
              alt="Github icon"
              height="20"
              width="20"
              style="filter: invert(1);"
            />
          </a>
        )
      }
      {
        project.demoLink && (
          <a
            href={project.demoLink}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center justify-center px-6 py-3 border-2 border-gray-400 dark:border-gray-500 hover:border-gray-600 dark:hover:border-gray-400 text-gray-700 dark:text-gray-300 font-medium rounded-lg transition-colors flex-grow md:flex-none"
          >
            <span class="mr-2">Demo</span>
            <svg
              class="w-5 h-5"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <>
                <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
              </>
            </svg>
          </a>
        )
      }
    </div>
  </div>
</article>
