---
import CodeBlock from "../../../components/common/CodeBlock";
import ProjectLayout from "../../../layouts/ProjectLayout.astro";

// Los metadatos se definen en el frontmatter
const title =
  "üßÆ Reconocedor de Expresiones Matem√°ticas - Christopher Villamar√≠n Projects";
const description =
  "Descubre el Reconocedor de Expresiones Matem√°ticas, un analizador l√©xico dise√±ado para procesar y manejar operaciones matem√°ticas complejas. Integra C y Go para extender funcionalidades avanzadas.";
const keywords = [
  "Reconocedor de Expresiones Matem√°ticas",
  "an√°lisis l√©xico",
  "compiladores",
  "matem√°ticas",
  "procesamiento num√©rico",
  "C",
  "Go",
  "Christopher Villamar√≠n",
  "xeland314",
  "proyectos",
  "Ecuador",
].join(", ");
const ogImage =
  "https://raw.githubusercontent.com/xeland314/Analizador-lexico/refs/heads/main/imgs/Captura1.png";

const ogUrl =
  "https://xeland314.github.io/es/projects/analizador-lexico/";
const author = "xeland314";
---

<ProjectLayout
  title={title}
  applicationName="Reconocedor de Expresiones Matem√°ticas"
  description={description}
  keywords={keywords}
  author={author}
  title={title}
  description={description}
  url={ogUrl}
  image={ogImage}
  imageAlt="Reconocedor de Expresiones Matem√°ticas"
  robots="index, follow"
  canonical={ogUrl}
>
  <header class="text-center mb-8">
    <h1 class="text-4xl font-bold mb-4">
      üßÆ Reconocedor de Expresiones Matem√°ticas
    </h1>
    <p class="text-lg">
      Un proyecto enfocado en el desarrollo de un analizador l√©xico para
      reconocer, procesar y manejar operaciones matem√°ticas complejas.
    </p>
  </header>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üìò Introducci√≥n</h2>
    <p class="mb-4">
      El analizador l√©xico representa la primera etapa de un compilador,
      encargado de identificar errores y procesar los datos para avanzar a las
      siguientes fases. Este proyecto desarrolla un sistema que reconoce
      sistemas num√©ricos y utiliza expresiones regulares √≥ptimas para cumplir
      con sus objetivos.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üéØ Objetivos</h2>
    <ul class="list-disc pl-6 space-y-2">
      <li>Reconocer valores num√©ricos de distintos sistemas de numeraci√≥n.</li>
      <li>Realizar conversiones entre sistemas num√©ricos.</li>
      <li>Distinguir operadores aritm√©ticos y signos de apertura/cierre.</li>
      <li>Reconocer funciones matem√°ticas.</li>
      <li>
        Implementar gram√°ticas para resolver operaciones b√°sicas y avanzadas.
      </li>
      <li>
        Guardar valores ingresados para reutilizarlos como en lenguajes de
        programaci√≥n.
      </li>
    </ul>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üîç Descripci√≥n del problema</h2>
    <p class="mb-4">
      El usuario puede ingresar n√∫meros que pertenecen a diferentes sistemas
      num√©ricos. El programa reconoce dichos sistemas, traduce las bases
      num√©ricas y distingue operadores aritm√©ticos, signos de agrupaci√≥n y
      funciones matem√°ticas mediante expresiones regulares.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üìã Sistemas Num√©ricos</h2>
    <table class="table-auto border-collapse w-full text-center">
      <thead>
        <tr>
          <th class="border px-4 py-2">Sistema Num√©rico</th>
          <th class="border px-4 py-2">Letra Reconocida</th>
          <th class="border px-4 py-2">Secuencias V√°lidas</th>
          <th class="border px-4 py-2">Ejemplos</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="border px-4 py-2">Binario</td>
          <td class="border px-4 py-2">b | B</td>
          <td class="border px-4 py-2">[0-1]</td>
          <td class="border px-4 py-2">b"1111"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Ternario</td>
          <td class="border px-4 py-2">t | T</td>
          <td class="border px-4 py-2">[0-2]</td>
          <td class="border px-4 py-2">T"12"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Cuaternario</td>
          <td class="border px-4 py-2">c | C</td>
          <td class="border px-4 py-2">[0-3]</td>
          <td class="border px-4 py-2">c"22"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Quinario</td>
          <td class="border px-4 py-2">q | Q</td>
          <td class="border px-4 py-2">[0-4]</td>
          <td class="border px-4 py-2">-q"11"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Senario</td>
          <td class="border px-4 py-2">x | X</td>
          <td class="border px-4 py-2">[0-5]</td>
          <td class="border px-4 py-2">x"100"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Heptal</td>
          <td class="border px-4 py-2">s | S</td>
          <td class="border px-4 py-2">[0-6]</td>
          <td class="border px-4 py-2">s"21"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Octal</td>
          <td class="border px-4 py-2">o | O</td>
          <td class="border px-4 py-2">[0-7]</td>
          <td class="border px-4 py-2">o"7"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Nonario</td>
          <td class="border px-4 py-2">n | N</td>
          <td class="border px-4 py-2">[0-8]</td>
          <td class="border px-4 py-2">N"81"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Decimal</td>
          <td class="border px-4 py-2"> </td>
          <td class="border px-4 py-2">[0-9]</td>
          <td class="border px-4 py-2">100</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Hexadecimal</td>
          <td class="border px-4 py-2">h | H</td>
          <td class="border px-4 py-2">[0-9a-fA-F]</td>
          <td class="border px-4 py-2">H"F"</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">Romano</td>
          <td class="border px-4 py-2">r | R</td>
          <td class="border px-4 py-2"> </td>
          <td class="border px-4 py-2">r"mmmCCXIV"</td>
        </tr>
      </tbody>
    </table>
    <p class="mt-4">
      Adem√°s, reconoce n√∫meros decimales en cualquier sistema num√©rico, por
      ejemplo: <code>b"111.11"</code>.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">
      üìê Extensi√≥n de los N√∫meros romanos
    </h2>
    <table class="table-auto border-collapse w-full text-center">
      <thead>
        <tr>
          <th class="border px-4 py-2">Letra</th>
          <th class="border px-4 py-2">Valor</th>
          <th class="border px-4 py-2">Impresi√≥n</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="border px-4 py-2">(n|N)</td>
          <td class="border px-4 py-2">5,000</td>
          <td class="border px-4 py-2">·πΩ</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(o|O)</td>
          <td class="border px-4 py-2">10,000</td>
          <td class="border px-4 py-2">·∫ä</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(p|P)</td>
          <td class="border px-4 py-2">50,000</td>
          <td class="border px-4 py-2">·∏∫</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(q|Q)</td>
          <td class="border px-4 py-2">100,000</td>
          <td class="border px-4 py-2">ƒâ</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(r|R)</td>
          <td class="border px-4 py-2">500,000</td>
          <td class="border px-4 py-2">‚ÜÅ</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(s|S)</td>
          <td class="border px-4 py-2">1,000,000</td>
          <td class="border px-4 py-2">·πÅ</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(t|T)</td>
          <td class="border px-4 py-2">5,000,000</td>
          <td class="border px-4 py-2">·πº</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(u|U)</td>
          <td class="border px-4 py-2">10,000,000</td>
          <td class="border px-4 py-2">·∫å</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(w|W)</td>
          <td class="border px-4 py-2">50,000,000</td>
          <td class="border px-4 py-2">·∏∏</td>
        </tr>
        <tr>
          <td class="border px-4 py-2">(y|Y)</td>
          <td class="border px-4 py-2">100,000,000</td>
          <td class="border px-4 py-2">·∏â</td>
        </tr>
        <tr>
          <td class="border px-4 py-2"></td>
          <td class="border px-4 py-2">500,000,000</td>
          <td class="border px-4 py-2">‚Üá</td>
        </tr>
        <tr>
          <td class="border px-4 py-2"></td>
          <td class="border px-4 py-2">1,000,000,000</td>
          <td class="border px-4 py-2">·πÄ</td>
        </tr>
      </tbody>
    </table>

    <p class="mt-4">
      Nota: Solo representa n√∫meros romanos enteros; la parte decimal se omite.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üìö C & Go</h2>
    <p class="mb-4">
      Para extender funciones matem√°ticas, el programa utiliza Go para exportar
      definiciones inexistentes en C, como la ra√≠z c√∫bica. Esto se logra
      compilando el archivo <code>math_2.go</code> en una librer√≠a est√°tica.
    </p>
    <CodeBlock
      language="sh"
      code={`go build -buildmode=c-archive math_2.go`}
      client:visible
    />
    <p class="mt-4">
      Esto genera archivos <code>math_2.h</code> y <code>math_2.a</code> que se integran
      en el proyecto C durante la compilaci√≥n.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üîß Ejecuci√≥n del programa</h2>
    <p class="mb-4">
      Compila y ejecuta el programa utilizando los siguientes comandos en la
      terminal de Ubuntu:
    </p>
    <CodeBlock
      language="sh"
      code={`yacc -d -v proyecto.y\nlex reconocedor.l\ngcc y.tab.c funciones.c lex.yy.c gofuncs/math_2.a -pthread -lfl -lm -o math_app\n./math_app`}
      client:visible
    />
    <p class="mt-4">
      O simplemente usa <code>make</code> para automatizar el proceso.
    </p>
  </section>

  <section class="mb-8">
    <h2 class="text-3xl font-semibold mb-4">üìä Ejemplos de ejecuci√≥n</h2>
    <p class="mb-4">
      Para preparar operaciones, utiliza la entrada y salida en archivos:
    </p>
    <CodeBlock
      language="sh"
      code={`./math_app < entrada.txt > salida.txt`}
      client:visible
    />
    <div class="text-center mt-4">
      <img
        src="https://raw.githubusercontent.com/xeland314/Analizador-lexico/refs/heads/main/imgs/Captura1.png"
        alt="Entrada"
        class="rounded-lg shadow-md mx-auto mb-4"
      />
      <img
        src="https://raw.githubusercontent.com/xeland314/Analizador-lexico/refs/heads/main/imgs/Captura2.png"
        alt="Salida"
        class="rounded-lg shadow-md mx-auto"
      />
    </div>
  </section>
</ProjectLayout>
