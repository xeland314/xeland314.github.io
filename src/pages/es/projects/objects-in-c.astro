---
import CodeBlock from "../../../components/common/CodeBlock";
import ProjectLayout from "../../../layouts/ProjectLayout.astro";

// Metadatos
const title = "游닂 Objetos en C - Christopher Villamar칤n Projects";
const description =
  "Explora c칩mo implementar programaci칩n orientada a objetos en C basada en el libro 'Object-oriented Programming with ANSI-C' de Axel-Tobias Schreiner. Aprende sobre encapsulamiento, clases y manejo eficiente de memoria.";
const keywords = [
  "Objetos en C",
  "programaci칩n orientada a objetos",
  "ANSI-C",
  "encapsulamiento",
  "clases en C",
  "desarrollo en C",
  "Christopher Villamar칤n",
  "xeland314",
  "proyectos",
  "Ecuador",
].join(", ");
const authors = "Christopher Alexander Villamar칤n Pila";
const ogTitle = "游닂 Objetos en C - Proyecto de Christopher Villamar칤n";
const ogDescription =
  "Descubre c칩mo implementar programaci칩n orientada a objetos en C con ejemplos pr치cticos. Basado en el libro 'Object-oriented Programming with ANSI-C'.";
const ogUrl = "https://xeland314.io/es/projects/objects-in-c/";
const ogImage = "https://xeland314.github.io/images/objects_in_c_preview.png";
const imageAlt = "Vista previa del proyecto Objetos en C";
const canonicalUrl = "https://xeland314.github.io/es/projects/objects-in-c/";
const robots = "index, follow";
---

<ProjectLayout
  title={title}
  description={description}
  keywords={keywords}
  author={authors}
  title={ogTitle}
  description={ogDescription}
  url={ogUrl}
  image={ogImage}
  imageAlt={imageAlt}
  canonical={canonicalUrl}
  applicationName="Objetos en C"
  robots={robots}
>
  <div class="p-0 sm:p-6">
    <header class="text-center mb-8">
      <h1 class="text-4xl font-bold mb-4">游닂 Objetos en C</h1>
      <p class="text-lg">
        Basado en el libro{" "}
        <a
          href="https://www.freetechbooks.com/object-oriented-programming-with-ansi-c-t551.html#:~:text=Object%2Doriented%20Programming%20with%20Ansi%2DC&text=Uses%20ANSI%2DC%20to%20discover,program%20to%20catch%20mistakes%20earlier."
          target="_blank"
          rel="noopener noreferrer"
          class="text-blue-600 hover:underline"
        >
          Object-oriented Programming with Ansi-C
        </a>{" "}
        de Axel-Tobias Schreiner.
      </p>
    </header>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游댳 Encapsulamiento</h2>
      <p class="mb-4">
        Se define un <code>struct</code> base llamado <code>Class</code>. A
        partir de este se pueden crear m치s objetos que hereden los mismos
        atributos y m칠todos. El dise침o permite reutilizar y gestionar atributos
        de manera eficiente.
      </p>
      <CodeBlock
        code={`typedef struct {
    size_t size;
    void * (* ctor) (void * self, va_list * app);
    void * (* dtor) (void * self);
    void * (* clone) (const void * self);
    size_t (* sizeOf) (const void * self);
    int (* differ) (const void * self, const void * other);
    char * (* toString) (const void * self);
} Class;
/* M칠todos sobrecargados: */
void * new(const void * _class, ...);
void delete(void * self);
void * clone(const void * self);
int differ(const void * self, const void * other);
size_t sizeOf(const void * self);
char * toString(const void * self);`}
        language="c"
        client:visible
      />
    </section>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游댳 Uso del repositorio</h2>
      <p class="mb-4">
        El manejo de objetos permite simplificar la gesti칩n de memoria en C.
        Considera el ejemplo de inicializar una cadena usando la clase{" "}
        <code>String</code>:
      </p>
      <CodeBlock
        code={`#include "String.h"
#include <stdlib.h>

int main() {
    void * text = new(String, "Hola mundo");
    printf("%s", toString(text));
    return 0;
}`}
        language="c"
        client:visible
      />
      <p class="mt-4">
        Este enfoque oculta el manejo de memoria en segundo plano, haciendo el
        c칩digo m치s limpio y legible.
      </p>
    </section>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游댳 Funciones principales</h2>
      <ul class="list-disc pl-6 space-y-4">
        <li>
          <strong>Constructor:</strong> Inicializa cualquier objeto de forma estandarizada
          con <code>new()</code>. Por ejemplo:
          <CodeBlock
            code={`void * text = new(String, "Hello, world");`}
            language="c"
            client:visible
          />
        </li>
        <li>
          <strong>Clonador:</strong> Crea una copia independiente del objeto:
          <CodeBlock
            code="void * textCopy = clone(text);"
            language="c"
            client:visible
          />
        </li>
        <li>
          <strong>Destructor:</strong> Libera la memoria del objeto usando:
          <CodeBlock code="delete(text);" language="c" client:visible />
        </li>
        <li>
          <strong>toString:</strong> Retorna el contenido del objeto como una cadena
          imprimible:
          <CodeBlock
            code={`printf("text = %s\\n", toString(text));`}
            language="c"
            client:visible
          />
        </li>
      </ul>
    </section>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游늶 Ejemplos de uso</h2>
      <p class="mb-4">
        Para compilar los ejemplos y ver los resultados en consola, utiliza los
        comandos:
      </p>
      <CodeBlock
        code="make examples && make run_examples"
        language="sh"
        client:visible
      />
      <p class="mt-4">
        El c칩digo de los ejemplos est치 en la carpeta <code>examples</code>.
      </p>
    </section>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游빍 Tests</h2>
      <p class="mb-4">
        Para verificar la integridad de las funciones implementadas, puedes
        ejecutar los tests con:
      </p>
      <CodeBlock code="make tests" client:visible />
      <p class="mt-4">
        Los tests utilizan la librer칤a{" "}
        <a
          href="https://github.com/mity/acutest"
          target="_blank"
          rel="noopener noreferrer"
          class="text-blue-600 hover:underline"
        >
          acutest.h
        </a>
        . Esto permite agregar m치s funcionalidades y probarlas.
      </p>
    </section>

    <section class="mb-8">
      <h2 class="text-3xl font-semibold mb-4">游빛 Limpieza</h2>
      <p class="mb-4">
        Para eliminar todos los archivos compilados, utiliza el comando:
      </p>
      <CodeBlock code="make clean" client:visible />
    </section>
  </div>
</ProjectLayout>
